name: Mimir

on:
  push:
    branches:
      - 301_search

permissions:
  contents: write

jobs:
  get_version:
    name: Get the app version
    environment: release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.echo_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: get_version
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.version' 'pubspec.yaml' | cut -d '+' -f 1
      - name: Echo version
        id: echo_version
        run: echo "version=${{ steps.get_version.outputs.result }}" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    environment: release
    needs: [ get_version ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Read Android NDK version
        run: |
          VERSION=$(cat .ndk-version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.VERSION }}
          add-to-path: false
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false
          rustflags: ""
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: pubspec.yaml
      - name: Get dependencies
        run: |
          export PUB_CACHE=$HOME/.pub-cache
          flutter pub get
      - name: Setup Isar
        run: |
          sudo apt-get install -y tofrodos
          fromdos .isar/tool/build_android.sh
          bash scripts/isar/fdroid_build_isar.sh x64 armv7 arm64
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Add keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/localmaterialnotes_keystore.jks
      - name: Add key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" > android/key.properties
      - name: Generate code
        run: |
          dart run build_runner build
          flutter gen-l10n
      - name: Build app (fat APK)
        run: flutter build apk --debug
      - name: Archive APK
        uses: actions/upload-artifact@v4
        with:
          name: LocalMaterialNotes
          path: build/app/outputs/flutter-apk/app-release.apk